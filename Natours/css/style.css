/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before { 
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}
/* seta o root, os 10px são referencia para todos os rem do css
  utilizamos a porcentagem do tamanho fornecido pelo navegador (padrao 16px),
  porem precisamos de 10px, então 10/16 = 0.625. Isso é uma boa prática para 
  se caso o usuário aumente o tamanho da fonte do navegador, também vai aumentar
  o tamanho da fonte do site
*/
html { 
    font-size: 62.5%;
}

/* Adicionamos a fonte dentro do body devido ao fato de ele ser 
    o elemento pai de todos os elementos sendo herdados por todos seus
    elementos filhos.  */
body { 
    font-family: "Lato", sans-serif; 
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: #777;
    padding: 3rem;

    box-sizing: border-box;
}

.header { 
    /* vh significa ViewPort, ou seja ela vai ocupar 95% da ViewPort */
    height: 95vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 131, 0.8)),
          url("./../img/hero.jpg");
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;
}

/* a referencia pela qual o elemento é posicionado é 
a partir do elemento pai de posição relativa */
.logo-box { 
    position: absolute;
    left: 4rem;
    top: 4rem;
}

.logo { 
    height: 3.5rem;
}

.text-box { 
    position: absolute;
    /* a % é em relação ao elemto pai */
    left: 50%;
    top: 40%;
    transform: translate(-50%, -50%);
    text-align: center;
}

/* o elemento h1 é o cabeçalho da página pela qual o SEO sabe o 
que nossa página da web é */
.heading-primary { 
    color: #ffffff;
    text-transform: uppercase;

    /* Faz com que as animações (keyframes) não dê uma "tremida" */
    backface-visibility: hidden;
    margin-bottom: 3rem;
}

.heading-primary-main { 
    display: block;
    font-size: 4rem;
    font-weight: 400; /* largura do texto */
    letter-spacing: 3.5rem;

    /* adicionando animações que foram criadas */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /* 
    animation-delay: 3s -> após 3s a animação é executada
    animation-iteration-count: 3; -> a animação é executada 3 vezes
    */ 
}

.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation:moveInRigth 1s ease-out;
}

/* animações 
  algo interessante é adicionar a animação em element:hover
*/
@keyframes moveInLeft { 
    /* inicio */
    /* transform: rotate(180deg) -> efeita de rodar */
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
    
    80% {
        transform: translateX(1rem);
    }
    /* final */
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRigth { 
    /* inicio */
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    /* final */
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom { 
    /* inicio */
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    /* final */
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.btn:link,
.btn-visited { 
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
}

/* o translate se referencia pelo estado inicial do elemento */
.btn:hover{ 
    transform: translateY(-.3rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

/* pseudo class click*/
.btn:active {
    transform: translateY(-.1rem);
}

.btn-white { 
    background-color: #ffffff;
    color: #777777;
}

/* pseudo elementos é indicado pelo :: */
.btn::after {
    content: "";
    display: inline-block;
    height: 100%; /* pega as dimensões definidas nos elemento btn */
    width: 100%;
    border-radius: 10rem;
    position: absolute; /* positions absolute precisam de uma referencia, e a primeira position relative que ele encontrar será sua referencia */
    top:0;
    left:0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after{ 
    background-color: #ffffff;
}

.btn:hover::after { 
    /* o pseudoelemento vai aumentar 1,5 */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated { 
    animation: moveInBottom .5s ease-out .75s;
    
    /* adiciona os estilos em 0 antes da animação começar */
    animation-fill-mode: backwards;
}